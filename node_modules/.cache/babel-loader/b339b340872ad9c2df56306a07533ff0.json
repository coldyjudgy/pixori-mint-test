{"ast":null,"code":"import warning from 'tiny-warning';\n/**\r\n * Set selector.\r\n *\r\n * @param {Object} original rule\r\n * @param {String} className class string\r\n * @return {Boolean} flag, indicating function was successfull or not\r\n */\n\nfunction registerClass(rule, className) {\n  // Skip falsy values\n  if (!className) return true; // Support array of class names `{composes: ['foo', 'bar']}`\n\n  if (Array.isArray(className)) {\n    for (var index = 0; index < className.length; index++) {\n      var isSetted = registerClass(rule, className[index]);\n      if (!isSetted) return false;\n    }\n\n    return true;\n  } // Support space separated class names `{composes: 'foo bar'}`\n\n\n  if (className.indexOf(' ') > -1) {\n    return registerClass(rule, className.split(' '));\n  }\n\n  var _ref = rule.options,\n      parent = _ref.parent; // It is a ref to a local rule.\n\n  if (className[0] === '$') {\n    var refRule = parent.getRule(className.substr(1));\n\n    if (!refRule) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Referenced rule is not defined. \\n\" + rule.toString()) : void 0;\n      return false;\n    }\n\n    if (refRule === rule) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Cyclic composition detected. \\n\" + rule.toString()) : void 0;\n      return false;\n    }\n\n    parent.classes[rule.key] += \" \" + parent.classes[refRule.key];\n    return true;\n  }\n\n  parent.classes[rule.key] += \" \" + className;\n  return true;\n}\n/**\r\n * Convert compose property to additional class, remove property from original styles.\r\n *\r\n * @param {Rule} rule\r\n * @api public\r\n */\n\n\nfunction jssCompose() {\n  function onProcessStyle(style, rule) {\n    if (!('composes' in style)) return style;\n    registerClass(rule, style.composes); // Remove composes property to prevent infinite loop.\n\n    delete style.composes;\n    return style;\n  }\n\n  return {\n    onProcessStyle: onProcessStyle\n  };\n}\n\nexport default jssCompose;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/test/pixori-mint-test/node_modules/jss-plugin-compose/dist/jss-plugin-compose.esm.js"],"names":["warning","registerClass","rule","className","Array","isArray","index","length","isSetted","indexOf","split","_ref","options","parent","refRule","getRule","substr","process","env","NODE_ENV","toString","classes","key","jssCompose","onProcessStyle","style","composes"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,cAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,SAA7B,EAAwC;AACtC;AACA,MAAI,CAACA,SAAL,EAAgB,OAAO,IAAP,CAFsB,CAET;;AAE7B,MAAIC,KAAK,CAACC,OAAN,CAAcF,SAAd,CAAJ,EAA8B;AAC5B,SAAK,IAAIG,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,SAAS,CAACI,MAAtC,EAA8CD,KAAK,EAAnD,EAAuD;AACrD,UAAIE,QAAQ,GAAGP,aAAa,CAACC,IAAD,EAAOC,SAAS,CAACG,KAAD,CAAhB,CAA5B;AACA,UAAI,CAACE,QAAL,EAAe,OAAO,KAAP;AAChB;;AAED,WAAO,IAAP;AACD,GAXqC,CAWpC;;;AAGF,MAAIL,SAAS,CAACM,OAAV,CAAkB,GAAlB,IAAyB,CAAC,CAA9B,EAAiC;AAC/B,WAAOR,aAAa,CAACC,IAAD,EAAOC,SAAS,CAACO,KAAV,CAAgB,GAAhB,CAAP,CAApB;AACD;;AAED,MAAIC,IAAI,GAAGT,IAAI,CAACU,OAAhB;AAAA,MACIC,MAAM,GAAGF,IAAI,CAACE,MADlB,CAlBsC,CAmBZ;;AAE1B,MAAIV,SAAS,CAAC,CAAD,CAAT,KAAiB,GAArB,EAA0B;AACxB,QAAIW,OAAO,GAAGD,MAAM,CAACE,OAAP,CAAeZ,SAAS,CAACa,MAAV,CAAiB,CAAjB,CAAf,CAAd;;AAEA,QAAI,CAACF,OAAL,EAAc;AACZG,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCnB,OAAO,CAAC,KAAD,EAAQ,6CAA6CE,IAAI,CAACkB,QAAL,EAArD,CAA/C,GAAuH,KAAK,CAA5H;AACA,aAAO,KAAP;AACD;;AAED,QAAIN,OAAO,KAAKZ,IAAhB,EAAsB;AACpBe,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCnB,OAAO,CAAC,KAAD,EAAQ,0CAA0CE,IAAI,CAACkB,QAAL,EAAlD,CAA/C,GAAoH,KAAK,CAAzH;AACA,aAAO,KAAP;AACD;;AAEDP,IAAAA,MAAM,CAACQ,OAAP,CAAenB,IAAI,CAACoB,GAApB,KAA4B,MAAMT,MAAM,CAACQ,OAAP,CAAeP,OAAO,CAACQ,GAAvB,CAAlC;AACA,WAAO,IAAP;AACD;;AAEDT,EAAAA,MAAM,CAACQ,OAAP,CAAenB,IAAI,CAACoB,GAApB,KAA4B,MAAMnB,SAAlC;AACA,SAAO,IAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASoB,UAAT,GAAsB;AACpB,WAASC,cAAT,CAAwBC,KAAxB,EAA+BvB,IAA/B,EAAqC;AACnC,QAAI,EAAE,cAAcuB,KAAhB,CAAJ,EAA4B,OAAOA,KAAP;AAC5BxB,IAAAA,aAAa,CAACC,IAAD,EAAOuB,KAAK,CAACC,QAAb,CAAb,CAFmC,CAEE;;AAErC,WAAOD,KAAK,CAACC,QAAb;AACA,WAAOD,KAAP;AACD;;AAED,SAAO;AACLD,IAAAA,cAAc,EAAEA;AADX,GAAP;AAGD;;AAED,eAAeD,UAAf","sourcesContent":["import warning from 'tiny-warning';\r\n\r\n/**\r\n * Set selector.\r\n *\r\n * @param {Object} original rule\r\n * @param {String} className class string\r\n * @return {Boolean} flag, indicating function was successfull or not\r\n */\r\nfunction registerClass(rule, className) {\r\n  // Skip falsy values\r\n  if (!className) return true; // Support array of class names `{composes: ['foo', 'bar']}`\r\n\r\n  if (Array.isArray(className)) {\r\n    for (var index = 0; index < className.length; index++) {\r\n      var isSetted = registerClass(rule, className[index]);\r\n      if (!isSetted) return false;\r\n    }\r\n\r\n    return true;\r\n  } // Support space separated class names `{composes: 'foo bar'}`\r\n\r\n\r\n  if (className.indexOf(' ') > -1) {\r\n    return registerClass(rule, className.split(' '));\r\n  }\r\n\r\n  var _ref = rule.options,\r\n      parent = _ref.parent; // It is a ref to a local rule.\r\n\r\n  if (className[0] === '$') {\r\n    var refRule = parent.getRule(className.substr(1));\r\n\r\n    if (!refRule) {\r\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Referenced rule is not defined. \\n\" + rule.toString()) : void 0;\r\n      return false;\r\n    }\r\n\r\n    if (refRule === rule) {\r\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Cyclic composition detected. \\n\" + rule.toString()) : void 0;\r\n      return false;\r\n    }\r\n\r\n    parent.classes[rule.key] += \" \" + parent.classes[refRule.key];\r\n    return true;\r\n  }\r\n\r\n  parent.classes[rule.key] += \" \" + className;\r\n  return true;\r\n}\r\n/**\r\n * Convert compose property to additional class, remove property from original styles.\r\n *\r\n * @param {Rule} rule\r\n * @api public\r\n */\r\n\r\n\r\nfunction jssCompose() {\r\n  function onProcessStyle(style, rule) {\r\n    if (!('composes' in style)) return style;\r\n    registerClass(rule, style.composes); // Remove composes property to prevent infinite loop.\r\n\r\n    delete style.composes;\r\n    return style;\r\n  }\r\n\r\n  return {\r\n    onProcessStyle: onProcessStyle\r\n  };\r\n}\r\n\r\nexport default jssCompose;\r\n"]},"metadata":{},"sourceType":"module"}