{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\test\\\\pixori-mint-test\\\\src\\\\Editor.js\";\nimport React, { useState } from \"react\";\nimport \"./styles/editor.scss\";\nimport { CirclePicker } from \"react-color\";\nimport DrawingPanel from \"./DrawingPanel\";\nexport default function Editor() {\n  const [panelWidth, setPanelWidth] = useState(8);\n  const [panelHeight, setPanelHeight] = useState(8);\n  const [hideOptions, setHideOptions] = useState(false);\n  const [hideDrawingPanel, setHideDrawingPanel] = useState(true);\n  const [buttonText, setButtonText] = useState(\"start drawing\");\n  const [selectedColor, setColor] = useState(\"#f44336\");\n\n  function initializeDrawingPanel() {\n    setHideOptions(!hideOptions);\n    setHideDrawingPanel(!hideDrawingPanel);\n    buttonText === \"start drawing\" ? setButtonText(\"reset\") : setButtonText(\"start drawing\");\n  }\n\n  function changeColor(color) {\n    setColor(color.hex);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"editor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Pixel Editor\"), hideDrawingPanel && /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 28\n    }\n  }, \"Enter Panel Dimensions\"), hideDrawingPanel && /*#__PURE__*/React.createElement(\"div\", {\n    id: \"options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"panelInput\",\n    defaultValue: panelWidth,\n    onChange: e => {\n      setPanelWidth(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Width\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"panelInput\",\n    defaultValue: panelHeight,\n    onChange: e => {\n      setPanelHeight(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Height\"))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: initializeDrawingPanel,\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, buttonText), hideOptions && /*#__PURE__*/React.createElement(CirclePicker, {\n    color: selectedColor,\n    onChangeComplete: changeColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), hideOptions && /*#__PURE__*/React.createElement(DrawingPanel, {\n    width: panelWidth,\n    height: panelHeight,\n    selectedColor: selectedColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/test/pixori-mint-test/src/Editor.js"],"names":["React","useState","CirclePicker","DrawingPanel","Editor","panelWidth","setPanelWidth","panelHeight","setPanelHeight","hideOptions","setHideOptions","hideDrawingPanel","setHideDrawingPanel","buttonText","setButtonText","selectedColor","setColor","initializeDrawingPanel","changeColor","color","hex","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./styles/editor.scss\";\r\nimport { CirclePicker } from \"react-color\";\r\nimport DrawingPanel from \"./DrawingPanel\";\r\n\r\n\r\nexport default function Editor() {\r\n  const [panelWidth, setPanelWidth] = useState(8);\r\n  const [panelHeight, setPanelHeight] = useState(8);\r\n  const [hideOptions, setHideOptions] = useState(false);\r\n  const [hideDrawingPanel, setHideDrawingPanel] = useState(true);\r\n  const [buttonText, setButtonText] = useState(\"start drawing\");\r\n  const [selectedColor, setColor] = useState(\"#f44336\");\r\n\r\n  function initializeDrawingPanel() {\r\n\r\n    setHideOptions(!hideOptions);\r\n    setHideDrawingPanel(!hideDrawingPanel);\r\n\r\n    buttonText === \"start drawing\"\r\n      ? setButtonText(\"reset\")\r\n      : setButtonText(\"start drawing\");\r\n  }\r\n\r\n  function changeColor(color) {\r\n    setColor(color.hex);\r\n  }\r\n\r\n  return (\r\n    <div id=\"editor\">\r\n      <h1>Pixel Editor</h1>\r\n      {hideDrawingPanel && <h2>Enter Panel Dimensions</h2>}\r\n      {hideDrawingPanel && (\r\n        <div id=\"options\">\r\n          <div className=\"option\">\r\n            <input\r\n              type=\"number\"\r\n              className=\"panelInput\"\r\n              defaultValue={panelWidth}\r\n              onChange={(e) => {\r\n                setPanelWidth(e.target.value);\r\n              }}\r\n            />\r\n            <span>Width</span>\r\n          </div>\r\n          <div className=\"option\">\r\n            <input\r\n              type=\"number\"\r\n              className=\"panelInput\"\r\n              defaultValue={panelHeight}\r\n              onChange={(e) => {\r\n                setPanelHeight(e.target.value);\r\n              }}\r\n            />\r\n            <span>Height</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <button onClick={initializeDrawingPanel} className=\"button\">\r\n        {buttonText}\r\n      </button>\r\n\r\n      {hideOptions && (\r\n        <CirclePicker color={selectedColor} onChangeComplete={changeColor} />\r\n      )}\r\n\r\n      {hideOptions && (\r\n        <DrawingPanel\r\n          width={panelWidth}\r\n          height={panelHeight}\r\n          selectedColor={selectedColor}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}