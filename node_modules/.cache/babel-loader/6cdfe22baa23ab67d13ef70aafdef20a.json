{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NodeHttpTransport = void 0;\n\nvar http = require(\"http\");\n\nvar https = require(\"https\");\n\nvar url = require(\"url\");\n\nvar grpc_web_1 = require(\"@improbable-eng/grpc-web\");\n\nfunction NodeHttpTransport() {\n  return function (opts) {\n    return new NodeHttp(opts);\n  };\n}\n\nexports.NodeHttpTransport = NodeHttpTransport;\n\nvar NodeHttp = function () {\n  function NodeHttp(transportOptions) {\n    this.options = transportOptions;\n  }\n\n  NodeHttp.prototype.sendMessage = function (msgBytes) {\n    if (!this.options.methodDefinition.requestStream && !this.options.methodDefinition.responseStream) {\n      this.request.setHeader(\"Content-Length\", msgBytes.byteLength);\n    }\n\n    this.request.write(toBuffer(msgBytes));\n    this.request.end();\n  };\n\n  NodeHttp.prototype.finishSend = function () {};\n\n  NodeHttp.prototype.responseCallback = function (response) {\n    var _this = this;\n\n    this.options.debug && console.log(\"NodeHttp.response\", response.statusCode);\n    var headers = filterHeadersForUndefined(response.headers);\n    this.options.onHeaders(new grpc_web_1.grpc.Metadata(headers), response.statusCode);\n    response.on(\"data\", function (chunk) {\n      _this.options.debug && console.log(\"NodeHttp.data\", chunk);\n\n      _this.options.onChunk(toArrayBuffer(chunk));\n    });\n    response.on(\"end\", function () {\n      _this.options.debug && console.log(\"NodeHttp.end\");\n\n      _this.options.onEnd();\n    });\n  };\n\n  ;\n\n  NodeHttp.prototype.start = function (metadata) {\n    var _this = this;\n\n    var headers = {};\n    metadata.forEach(function (key, values) {\n      headers[key] = values.join(\", \");\n    });\n    var parsedUrl = url.parse(this.options.url);\n    var httpOptions = {\n      host: parsedUrl.hostname,\n      port: parsedUrl.port ? parseInt(parsedUrl.port) : undefined,\n      path: parsedUrl.path,\n      headers: headers,\n      method: \"POST\"\n    };\n\n    if (parsedUrl.protocol === \"https:\") {\n      this.request = https.request(httpOptions, this.responseCallback.bind(this));\n    } else {\n      this.request = http.request(httpOptions, this.responseCallback.bind(this));\n    }\n\n    this.request.on(\"error\", function (err) {\n      _this.options.debug && console.log(\"NodeHttp.error\", err);\n\n      _this.options.onEnd(err);\n    });\n  };\n\n  NodeHttp.prototype.cancel = function () {\n    this.options.debug && console.log(\"NodeHttp.abort\");\n    this.request.abort();\n  };\n\n  return NodeHttp;\n}();\n\nfunction filterHeadersForUndefined(headers) {\n  var filteredHeaders = {};\n\n  for (var key in headers) {\n    var value = headers[key];\n\n    if (headers.hasOwnProperty(key)) {\n      if (value !== undefined) {\n        filteredHeaders[key] = value;\n      }\n    }\n  }\n\n  return filteredHeaders;\n}\n\nfunction toArrayBuffer(buf) {\n  var view = new Uint8Array(buf.length);\n\n  for (var i = 0; i < buf.length; i++) {\n    view[i] = buf[i];\n  }\n\n  return view;\n}\n\nfunction toBuffer(ab) {\n  var buf = Buffer.alloc(ab.byteLength);\n\n  for (var i = 0; i < buf.length; i++) {\n    buf[i] = ab[i];\n  }\n\n  return buf;\n}","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NodeHttpTransport = void 0;\r\nvar http = require(\"http\");\r\nvar https = require(\"https\");\r\nvar url = require(\"url\");\r\nvar grpc_web_1 = require(\"@improbable-eng/grpc-web\");\r\nfunction NodeHttpTransport() {\r\n    return function (opts) {\r\n        return new NodeHttp(opts);\r\n    };\r\n}\r\nexports.NodeHttpTransport = NodeHttpTransport;\r\nvar NodeHttp = (function () {\r\n    function NodeHttp(transportOptions) {\r\n        this.options = transportOptions;\r\n    }\r\n    NodeHttp.prototype.sendMessage = function (msgBytes) {\r\n        if (!this.options.methodDefinition.requestStream && !this.options.methodDefinition.responseStream) {\r\n            this.request.setHeader(\"Content-Length\", msgBytes.byteLength);\r\n        }\r\n        this.request.write(toBuffer(msgBytes));\r\n        this.request.end();\r\n    };\r\n    NodeHttp.prototype.finishSend = function () {\r\n    };\r\n    NodeHttp.prototype.responseCallback = function (response) {\r\n        var _this = this;\r\n        this.options.debug && console.log(\"NodeHttp.response\", response.statusCode);\r\n        var headers = filterHeadersForUndefined(response.headers);\r\n        this.options.onHeaders(new grpc_web_1.grpc.Metadata(headers), response.statusCode);\r\n        response.on(\"data\", function (chunk) {\r\n            _this.options.debug && console.log(\"NodeHttp.data\", chunk);\r\n            _this.options.onChunk(toArrayBuffer(chunk));\r\n        });\r\n        response.on(\"end\", function () {\r\n            _this.options.debug && console.log(\"NodeHttp.end\");\r\n            _this.options.onEnd();\r\n        });\r\n    };\r\n    ;\r\n    NodeHttp.prototype.start = function (metadata) {\r\n        var _this = this;\r\n        var headers = {};\r\n        metadata.forEach(function (key, values) {\r\n            headers[key] = values.join(\", \");\r\n        });\r\n        var parsedUrl = url.parse(this.options.url);\r\n        var httpOptions = {\r\n            host: parsedUrl.hostname,\r\n            port: parsedUrl.port ? parseInt(parsedUrl.port) : undefined,\r\n            path: parsedUrl.path,\r\n            headers: headers,\r\n            method: \"POST\"\r\n        };\r\n        if (parsedUrl.protocol === \"https:\") {\r\n            this.request = https.request(httpOptions, this.responseCallback.bind(this));\r\n        }\r\n        else {\r\n            this.request = http.request(httpOptions, this.responseCallback.bind(this));\r\n        }\r\n        this.request.on(\"error\", function (err) {\r\n            _this.options.debug && console.log(\"NodeHttp.error\", err);\r\n            _this.options.onEnd(err);\r\n        });\r\n    };\r\n    NodeHttp.prototype.cancel = function () {\r\n        this.options.debug && console.log(\"NodeHttp.abort\");\r\n        this.request.abort();\r\n    };\r\n    return NodeHttp;\r\n}());\r\nfunction filterHeadersForUndefined(headers) {\r\n    var filteredHeaders = {};\r\n    for (var key in headers) {\r\n        var value = headers[key];\r\n        if (headers.hasOwnProperty(key)) {\r\n            if (value !== undefined) {\r\n                filteredHeaders[key] = value;\r\n            }\r\n        }\r\n    }\r\n    return filteredHeaders;\r\n}\r\nfunction toArrayBuffer(buf) {\r\n    var view = new Uint8Array(buf.length);\r\n    for (var i = 0; i < buf.length; i++) {\r\n        view[i] = buf[i];\r\n    }\r\n    return view;\r\n}\r\nfunction toBuffer(ab) {\r\n    var buf = Buffer.alloc(ab.byteLength);\r\n    for (var i = 0; i < buf.length; i++) {\r\n        buf[i] = ab[i];\r\n    }\r\n    return buf;\r\n}\r\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}